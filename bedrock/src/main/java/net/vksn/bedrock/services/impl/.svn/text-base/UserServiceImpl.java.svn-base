package net.vksn.bedrock.services.impl;

import java.util.Collection;

import javax.persistence.EntityNotFoundException;

import net.vksn.bedrock.dao.UserDAO;
import net.vksn.bedrock.model.Role;
import net.vksn.bedrock.model.User;
import net.vksn.bedrock.query.UserQuery;
import net.vksn.bedrock.services.RoleService;
import net.vksn.bedrock.services.UserService;

import org.springframework.transaction.annotation.Transactional;

public class UserServiceImpl implements UserService {
	private UserDAO userDAO;
	private RoleService roleService;
	
	public void setUserDAO(UserDAO userDAO) {
		this.userDAO = userDAO;
	}

	public void setRoleService(RoleService roleService) {
		this.roleService = roleService;
	}

	@Transactional(readOnly = true)
	public Collection<User> getByQuery(UserQuery query) {
		return this.userDAO.getByQuery(query);
	}

	@Transactional
	public void store(User user) {
		for(Role role : user.getRoles()) {
			this.roleService.store(role);
		}
		this.userDAO.store(user);
		
	}
	@Transactional(readOnly = true)
	public User getUser(int id) throws EntityNotFoundException {
		return this.userDAO.getUser(id);
	}

	public User getUserByUsername(String username)
			throws EntityNotFoundException {
		return this.userDAO.getUserByUsername(username);
	}
}
